#!/bin/bash

# artdaqwebgui - Startup script for artdaqwebgui

# chkconfig: 35 85 15
# description: Artdaq web config editor
# processname: artdaqwebgui
# config: /home/pduser/databases/config/artdaqwebgui.conf
# pidfile: /home/pduser/databases/artdaqwebgui.pid

NODEJS_USER=pduser
NODEJS_GROUP=pduser

daqswdir=/home/${NODEJS_USER}

. /etc/rc.d/init.d/functions

artdaqwebguilock=${daqswdir}/databases/artdaqwebgui.lock

# things from artdaqwebgui.conf get there by artdaqwebgui reading it
PIDFILEPATH=${daqswdir}/databases/artdaqwebgui.pid
PIDDIR=$(dirname $PIDFILEPATH)

start()
{
  # Make sure the default pidfile directory exists
  if [ ! -d $PIDDIR ]; then
    install -d -m 0755 -o $NODEJS_USER -g $NODEJS_GROUP $PIDDIR
  fi

  echo -n $"Starting Artdaq Web config editor server: "  
  daemon  --user $NODEJS_USER --check node "${daqswdir}/databases/init.d/launchnodejs.sh  >/dev/null 2>&1"
  RETVAL=$? 
  echo
  [ $RETVAL -eq 0 ] && touch ${artdaqwebguilock}
}

stop()
{
  echo -n $"Stopping Artdaq Web config editor server: "
  nodejs_killproc "$PIDFILEPATH" node
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f ${artdaqwebguilock}
}

restart () {
        stop
        start
}

# Send TERM signal to process and wait up to 300 seconds for process to go away.
# If process is still alive after 300 seconds, send KILL signal.
# Built-in killproc() (found in /etc/init.d/functions) is on certain versions of Linux
# where it sleeps for the full $delay seconds if process does not respond fast enough to
# the initial TERM signal.
nodejs_killproc()
{
  local pid_file=$1
  local procname=$2
  local -i delay=300
  local -i duration=10
  local pid=`pidofproc -p "${pid_file}" ${procname}`

  kill -TERM $pid >/dev/null 2>&1
  usleep 100000
  local -i x=0
  while [ $x -le $delay ] && checkpid $pid; do
    sleep $duration
    x=$(( $x + $duration))
  done

  kill -KILL $pid >/dev/null 2>&1
  usleep 100000

  checkpid $pid # returns 0 only if the process exists
  local RC=$?
  [ "$RC" -eq 0 ] && failure "${procname} shutdown" || rm -f "${pid_file}"; success "${procname} shutdown"
  RC=$((! $RC)) # invert return code so we return 0 when process is dead.
  return $RC
}

RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f ${artdaqwebguilock} ] && restart || :
    ;;
  status)
    status $nodejs
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL
