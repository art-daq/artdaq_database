
artdaq_processes: [{

collection: COB1RCEs 

pattern: "^(?!.*common_code)(.*/)(cob1_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB2RCEs 

pattern: "^(?!.*common_code)(.*/)(cob2_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB3RCEs 

pattern: "^(?!.*common_code)(.*/)(cob3_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB4RCEs 

pattern: "^(?!.*common_code)(.*/)(cob4_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB5RCEs 

pattern: "^(?!.*common_code)(.*/)(cob5_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB6RCEs 

pattern: "^(?!.*common_code)(.*/)(cob6_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB7RCEs 

pattern: "^(?!.*common_code)(.*/)(cob7_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: COB8RCEs 

pattern: "^(?!.*common_code)(.*/)(cob8_rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: RCEs 

pattern: "^(?!.*common_code)(.*/)(rce\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: WIBs 

pattern: "^(?!.*common_code)(.*/)(wib\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: WIBTests 

pattern: "^(?!.*common_code)(.*/)(wibtest\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: SSPs 

pattern: "^(?!.*common_code)(.*/)(ssp\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: PENs 

pattern: "^(?!.*common_code)(.*/)(pen\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: Felixes 

pattern: "^(?!.*common_code)(.*/)([Ff]elix\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: Timing 

pattern: "^(?!.*common_code)(.*/)(timing[_|]\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: PMTs 

pattern: "^(?!.*common_code)(.*/)(pmt\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: TPCs 

pattern: "^(?!.*common_code)(.*/)(tpc\d+(_hw_cfg|))(\.fcl$)" 

}, {

collection: Components 

pattern: "^(?!.*common_code)(.*/)(component\d*(_hw_cfg|))(\.fcl$)" 

}, {

collection: Triggers

pattern: "^(?!.*common_code)(.*/)(trigger_\d*(_hw_cfg|))(\.fcl$)" 

}, {

collection: ToySimulators

pattern: "^(?!.*common_code)(.*/)(toysimulator\d*(_hw_cfg|))(\.fcl$)" 

}, {

collection: BoardReaders 

pattern: "^(?!.*common_code)(.*/)(BoardReader\d+)(\.fcl$)" 

}, {

collection: EventBuilders 

pattern: "^(?!.*common_code)(.*/)(EventBuilder\d+)(\.fcl$)" 

}, {

collection: Aggregators 

pattern: "^(?!.*common_code)(.*/)(Aggregator\d+)(\.fcl$)" 

}, {

collection: DataLoggers 

pattern: "^(?!.*common_code)(.*/)(DataLogger\d+)(\.fcl$)" 

}, {

collection: Dispatchers 

pattern: "^(?!.*common_code)(.*/)(Dispatcher_?\d+)(\.fcl$)" 

}, {

collection: RoutingMasters

pattern: "^(?!.*common_code)(.*/)(RoutingMaster_?\d+)(\.fcl$)" 

}, {

collection: expert_options 

pattern: "^(?!.*common_code)(.*/)((rce_expert_run_options|ssp_expert_run_options|user_run_options).*)(\.fcl$)" 

}] 

artdaq_includes: [{

collection: common_code 

pattern: "(.*/)common_code\/(.*)(\.fcl$)" 

}] 

run_history: [{

collection: RunHistory 

pattern: "(.*/)((BoardReader_TOY\d+|BoardReader)_(.*[^_])_(\d+))(\.fcl$)" 

entity: "match.group(3)+'_'+match.group(4)+'_'+match.group(5)" 

},{

collection: RunHistory 

pattern: "(.*/)((component)([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

},{

collection: RunHistory 

pattern: "(.*/)((wib)([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

},{

collection: RunHistory 

pattern: "(.*/)((cob[0-9]+)_(rce[0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

},{

collection: RunHistory 

pattern: "(.*/)((ssp)([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

},{

collection: RunHistory 

pattern: "(.*/)((timing)_([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

},{

collection: RunHistory 

pattern: "(.*/)((toysimulator)([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

},{

collection: RunHistory 

pattern: "(.*/)((felix)([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

}, {

collection: RunHistory 

pattern: "(.*/)((EventBuilder|Aggregator|DataLogger|Dispatcher|RoutingMaster)_(.*[^_])_(\d+))(\.fcl$)" 

entity: "match.group(3)+'_'+match.group(4)+'_'+match.group(5)" 

}, {

collection: RunHistory 

pattern: "(.*/)((EventBuilder|Aggregator|DataLogger|Dispatcher|RoutingMaster)([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

}, {

collection: RunHistory 

pattern: "(.*/)((EventBuilder|Aggregator|DataLogger|Dispatcher|RoutingMaster)_([0-9]+))(\.fcl$)" 

entity: "match.group(2)" 

}, {

collection: RunHistory 

pattern: "(.*/)(metadata)(\.fcl$)" 

}, {

collection: RunHistory 

pattern: "(.*/)(boot)(\.fcl$)" 

}, {

collection: RunHistory 

pattern: "(.*/)(DataflowConfiguration)(\.fcl$)" 

}, {

collection: RunHistory 

pattern: "(.*/)(RunHistory)(\.fcl$)" 

}, {

collection: RunHistory 

pattern: "(.*/)(known_boardreaders_list)(\.fcl$)" 

}] 

system_layout: [{

collection: SystemLayout 

pattern: "^(?!.*common_code)(.*)(schema)(\.fcl$)" 

}] 
