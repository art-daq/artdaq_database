  a1:"abc" 
  a2:"a
b\nc"
  a3:"a	b\tc" 
  a4:"a\tb	c" 
  a5:"a\\a" 
  a6:"a'b\'c"

evbFile:{
  fileName:"/tmp/eventbuilder/evb_%UID%_metrics.log" 
  level:3 
  metricPluginType1:"file" 
  metricPluginType2:"file 
  2" #ss
  metricPluginType3:"fi\"le" 
  metricPluginType4:"fi\'le" 
  metricPluginType5:"fi\"le" 
  metricPluginType6:"fi\\\"le" uniquify:true
  
}


    evbFile: {
      metricPluginType1: "file" #test1
      metricPluginType2: 'file' #test2
      metricPluginType3: 'fi"le' //test3
      metricPluginType4: "fi'le" //test4
      metricPluginType5: "fi\"le" //test5
      metricPluginType6: 'fi\"le' //test6
      metricPluginType7: 'fi\"le' //test7


      level: 3
      fileName: "/tmp/eventbuilder/evb_%UID%_metrics.log" //demoe
      uniquify: true
    }


services: {
  scheduler: {
    fileMode: NOMERGE
  }
  user: {
    NetMonTransportServiceInterface: {
      service_provider: NetMonTransportService
      first_data_receiver_rank: 6
      mpi_buffer_count: 8
      max_fragment_size_words: 2097152
      data_receiver_count: 1 # 2
      #broadcast_sends: true
    }
  }

  #SimpleMemoryCheck: { }
}

daq: {
  max_fragment_size_words: 2097152
  event_builder: {
    mpi_buffer_count: 16
    first_fragment_receiver_rank: 0
    fragment_receiver_count: 2
    expected_fragments_per_event: 2
    use_art: true
    print_event_store_stats: true
    verbose: false
  }
  metrics: {
    evbFile: {
      metricPluginType1: "file" #test
      metricPluginType2: 'file' #test
      metricPluginType3: 'fi"le' //test
      metricPluginType4: "fi'le" //test

  //    metricPluginType5: "fi"le" //test
  //    metricPluginType6: 'fi'le' //test

      level: 3
      fileName: "/tmp/eventbuilder/evb_%UID%_metrics.log" //demoe
      uniquify: true
    }
  }
} 

outputs: {
  netMonOutput: {
    module_type: NetMonOutput
     #Failure 5 not a satom 
    SelectEvents: { SelectEvents: [ pmod2,pmod3 ] }
    #outputCommands: [ "keep *", "drop artdaq::Fragments_daq_V1720_*", "drop artdaq::Fragments_daq_V1724_*" ]
  }
  #normalOutput: {
  #  module_type: RootOutput
  #  fileName: "/tmp/artdaqdemo_eb04_r%06r_sr%02s_%to.root"
  #  compressionLevel: 0
  #  SelectEvents: { SelectEvents: [ pmod2,pmod3 ] }
  #  #outputCommands: [ "keep *", "drop artdaq::Fragments_daq_V1720_*", "drop artdaq::Fragments_daq_V1724_*" ]
  #}
}

physics: {

  filters: {
  
      #Failure 4 not a satom 
    prescaleMod2: {
       module_type: NthEvent #//Success 5 right of satom
       nth: 2
    }

    prescaleMod3: {
      #Failure 3 not directly above satom 

       module_type: NthEvent
       nth: 3 //#Success 4 right of satom
    }
  }

  //Failure 1 not a comment
  pmod2: [ prescaleMod2 ]
  #Failure 2 not a satom 
  pmod3: [ prescaleMod3 ]
   

  #a1: [ app, wf ]

  my_output_modules: [ netMonOutput ]
  #my_output_modules: [ normalOutput ]
}
source: {
#Success 1  above satom
  module_type: RawInput 
  waiting_time: 900 //Success 2 right of satom
  resume_after_timeout: true #Success 3 right of satom
 // fragment_type_map: [[1, "missed"], [3, "V1720"], [4, "V1724"], [6, "TOY1"], [7, "TOY2"], [8, "ASCII"]]
}
process_name: DAQ
