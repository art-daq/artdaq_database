 
daq: {
 
fragment_receiver: {
 
mpi_sync_interval: 50  
# CommandableFragmentGenerator Configuration: 
fragment_ids: []  
 
fragment_id: 0  
 
sleep_on_stop_us: 500000  
 
request_mode: Ignored # Possible values are: Ignored, Single, Buffer, Window
 
data_buffer_depth_fragments: 1000  
 
data_buffer_depth_mb: 1000  
 
request_port: 3001  
 
request_address: "227.128.12.26" # Multicast request address
 
request_window_offset: 0 # Request message contains tzero. Window will be from tzero - offset to tzero + width
# Request message contains tzero. Window will be from tzero - offset to tzero + width
request_window_width: 0  
 
stale_request_timeout: -2147483648 # How long to wait before discarding request messages that are outside the available data
# How long to wait before discarding request messages that are outside the available data
request_windows_are_unique: true # If request windows are unique, avoids a copy operation, but the same data point cannot be used for two requests. If this is not anticipated, leave set to |true|
 
separate_data_thread: false # MUST be true for requests to be applied! If requests are not desired, but a separate readout thread is, set this to true and request_mode to ignored.
# MUST be true for requests to be applied! If requests are not desired, but a separate readout thread is, set this to true and request_mode to ignored.
separate_monitoring_thread: false # Whether a thread should be started which periodically calls checkHWStatus_, a user-defined function which should be used to check hardware status registers and report to MetricMan.
# Whether a thread should be started which periodically calls checkHWStatus_, a user-defined function which should be used to check hardware status registers and report to MetricMan.
hardware_poll_interval_us: 0 # How often, in microseconds, checkHWStatus_() should be called. 0 to disable.
# Generated Parameters: 
generator: ToySimulator  
 
fragment_type: TOY1  
 
board_id: 0  
 
starting_fragment_id: 0  
 
random_seed: 7825  
 
nADCcounts: 40  
 
throttle_usecs: 100000  
 
distribution_type: 1  
 
timestamp_scale_factor: 1  
 
destinations: {
 
d2: {
 
transferPluginType: MPI  
 
destination_rank: 2  
 
max_fragment_size_words: 2097152  
 
host_map: [{
 
rank: 0  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5300  

}, {
 
rank: 1  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5310  

}, {
 
rank: 2  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5320  

}, {
 
rank: 3  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5330  

}, {
 
rank: 4  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5340  

}, {
 
rank: 5  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5350  

}]  

} 
d3: {
 
transferPluginType: MPI  
 
destination_rank: 3  
 
max_fragment_size_words: 2097152  
 
host_map: [{
 
rank: 0  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5300  

}, {
 
rank: 1  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5310  

}, {
 
rank: 2  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5320  

}, {
 
rank: 3  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5330  

}, {
 
rank: 4  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5340  

}, {
 
rank: 5  
 
host: "mu2edaq01.fnal.gov"  
 
portOffset: 5350  

}]  

}
}
} 
metrics: {
 
brFile: {
 
metricPluginType: file  
 
level: 3  
 
fileName: "/tmp/boardreader/br_%UID%_metrics.log"  
 
uniquify: true  

}
}
}